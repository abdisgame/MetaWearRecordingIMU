using System;

namespace MbientLab.MetaWear {
    /// <summary>
    /// Wrapper class holding Characteristics under the
    /// <a href = "https://www.bluetooth.com/specifications/gatt/viewer?attributeXmlFile=org.bluetooth.service.device_information.xml" > Device Information</a>
    /// GATT service
    /// </summary>
    public class DeviceInformation {
        /// <summary>
        /// Device's manufacturer name, characteristic 0x2A29
        /// </summary>
        public string Manufacturer { get; }
        /// <summary>
        /// Model number assigned by MbientLab, characteristic 0x2A24
        /// </summary>
        public string ModelNumber { get; }
        /// <summary>
        /// Device's serial number, characteristic 0x2A25
        /// </summary>
        public string SerialNumber { get; }
        /// <summary>
        /// Revision of the firmware on the device, characteristic 0x2A26
        /// </summary>
        public string FirmwareRevision { get; }
        /// <summary>
        /// Revision of the hardware on the device, characteristic 0x2A27
        /// </summary>
        public string HardwareRevision { get; }

        public DeviceInformation(string manufacturer, string modelNumber, string serialNumber, string firmwareRevision, string hardwareRevision) {
            Manufacturer = manufacturer;
            ModelNumber = modelNumber;
            SerialNumber = serialNumber;
            FirmwareRevision = firmwareRevision;
            HardwareRevision = hardwareRevision;
        }

        public override bool Equals(Object obj) {
            if (this == obj) return true;
            if (obj == null || GetType() != obj.GetType()) return false;

            var that = obj as DeviceInformation;

            return Manufacturer.Equals(that.Manufacturer) && ModelNumber.Equals(that.ModelNumber) && SerialNumber.Equals(that.SerialNumber) &&
                    FirmwareRevision.Equals(that.FirmwareRevision) && HardwareRevision.Equals(that.HardwareRevision);
        }

        public override int GetHashCode() {
            // Generated by IntelliJ
            int result = Manufacturer.GetHashCode();
            result = 31 * result + ModelNumber.GetHashCode();
            result = 31 * result + SerialNumber.GetHashCode();
            result = 31 * result + FirmwareRevision.GetHashCode();
            result = 31 * result + HardwareRevision.GetHashCode();

            return result;
        }

        public override string ToString() {
            return string.Format("{{manufacturer: {0}, serialNumber: {1}, firmwareRevision: {2}, hardwareRevision: {3}, modelNumber: {4}{5}",
                Manufacturer, SerialNumber, FirmwareRevision, HardwareRevision, ModelNumber, "}");
        }
    }
}
